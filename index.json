
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"I am Lukas Gerlach, a PhD student at CISPA Helmholtz Center for Information Security microarchitecture and systems security at the rearch group of Michael Schwarz. I have a broad interest in everything security but currently focus novel architectures such as RISC-V and automated reverse engineering of CPUs. In my free time I enjoy playing CTF especially on exploitation and cryptography style challenges as part of the saarsec team.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"4d3a7dc5edf9be9d50deb737174cf09e","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I am Lukas Gerlach, a PhD student at CISPA Helmholtz Center for Information Security microarchitecture and systems security at the rearch group of Michael Schwarz. I have a broad interest in everything security but currently focus novel architectures such as RISC-V and automated reverse engineering of CPUs.","tags":null,"title":"Lukas Gerlach","type":"authors"},{"authors":["Ruiyi Zhang","Lukas Gerlach","Daniel Weber","Lorenz Hetterich","Youheng Lü","Andreas Kogler","Michael Schwarz"],"categories":null,"content":"","date":1716163200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1716163200,"objectID":"412388ef096be3c00e5ad2562a8fd8cf","permalink":"https://lukasgerlach.me/publication/2024-cache-warp/","publishdate":"2020-05-20T00:00:00Z","relpermalink":"/publication/2024-cache-warp/","section":"publication","summary":"AMD SEV is a trusted-execution environment (TEE), providing confidentiality and integrity for virtual machines (VMs). With AMD SEV, it is possible to securely run VMs on an untrusted hypervisor. While previous attacks demonstrated architectural shortcomings of earlier SEV versions, AMD claims that SEV-SNP prevents all attacks on the integrity. In this paper, we introduce CacheWarp, a new softwarebased fault attack on AMD SEV-ES and SEV-SNP, exploiting the possibility to architecturally revert modified cache lines of guest VMs to their previous (stale) state. Unlike previous attacks on the integrity, CacheWarp is not mitigated on the newest SEV-SNP implementation, and it does not rely on specifics of the guest VM. CacheWarp only has to interrupt the VM at an attacker-chosen point to invalidate modified cache lines without them being written back to memory. Consequently, the VM continues with architecturally stale data. In 3 case studies, we demonstrate an attack on RSA in the Intel IPP crypto library, recovering the entire private key, logging into an OpenSSH server without authentication, and escalating privileges to root via the sudo binary. While we implement a software-based mitigation proof-of-concept, we argue that mitigations are difficult, as the root cause is in the hardware.","tags":["Confidential Computing"],"title":"CacheWarp: Software-based Fault Injection using Selective State Reset","type":"publication"},{"authors":["Lukas Gerlach","Simon Schwarz","Nicolas Faroß","Michael Schwarz"],"categories":null,"content":"","date":1716163200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1716163200,"objectID":"bdbb711e3adfc8c6529c8d8769def74f","permalink":"https://lukasgerlach.me/publication/2024-micro-hash/","publishdate":"2020-05-20T00:00:00Z","relpermalink":"/publication/2024-micro-hash/","section":"publication","summary":"Modern CPUs use a variety of undocumented microarchitectural hash functions to efficiently distribute data within microarchitectural structures such as caches. A well-known function is the cache slice function that distributes cache lines to the slices of the last-level cache. Knowing these functions improves microarchitectural attacks, such as Prime+Probe or Rowhammer, drastically. However, while several such linear functions have been reverse-engineered, there is no generic or automated approach for reverse-engineering non-linear functions, which have become common with modern CPUs. In this paper, we introduce a novel generic approach for automatically reverse-engineering a wide range of microarchitectural hash functions. Our approach combines techniques initially used for logic-gate minimization and from computer algebra to infer the hash functions based on input-output pairs observed via side channels. With our framework, we infer 3 previously-unknown non-linear hash functions on both AMD and Intel CPUs, including the new Alder Lake hybrid-CPU architecture. We verify our approach by reproducing known hash functions and evaluating side-channel attacks that rely on these functions, resulting in success rates above 97.65%. We stress the need to design such functions with both performance and security in mind and discuss alternative designs that can be used in future CPUs.","tags":["Reverse Engineering","Logic Solving"],"title":"Efficient and Generic Microarchitectural Hash-Function Recovery","type":"publication"},{"authors":["Lukas Gerlach","Daniel Weber"],"categories":null,"content":"","date":1701954000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1701954000,"objectID":"d4fb350c076974d5971d89f6025a6885","permalink":"https://lukasgerlach.me/talk/rowhammer-revisited-from-exploration-to-exploitation-and-mitigation/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/talk/rowhammer-revisited-from-exploration-to-exploitation-and-mitigation/","section":"event","summary":" ","tags":[],"title":"Rowhammer Revisited: From Exploration to Exploitation and Mitigation","type":"event"},{"authors":["Lukas Gerlach","Daniel Weber"],"categories":null,"content":"","date":1701522000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1701522000,"objectID":"9fe5a491adec5dda6b31edbe1aeccfc7","permalink":"https://lukasgerlach.me/talk/a-security-risc-the-state-of-microarchitectural-attacks-on-risc-v/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/talk/a-security-risc-the-state-of-microarchitectural-attacks-on-risc-v/","section":"event","summary":" ","tags":[],"title":"A Security RISC? The State of Microarchitectural Attacks on RISC-V","type":"event"},{"authors":["Lukas Gerlach","Fabian Thomas","Robert Pietsch","Michael Schwarz"],"categories":null,"content":"","date":1696550400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1696550400,"objectID":"b85ffe6f3e174b6a96f35459a9edee7e","permalink":"https://lukasgerlach.me/publication/2023-rowhammer-reprod/","publishdate":"2023-10-06T00:00:00Z","relpermalink":"/publication/2023-rowhammer-reprod/","section":"publication","summary":"Rowhammer is a hardware vulnerability that can be exploited to induce bit flips in dynamic random access memory (DRAM), compromising the security of a computer system. Multiple ways of exploiting Rowhammer have been shown and even in the presence of mitigations such as target row refresh (TRR), DRAM modules remain partially vulnerable. In this paper, we present a large-scale reproduction study on the Rowhammer vulnerability using the Blacksmith Rowhammer fuzzer. The main focus of our study is the impact of the fuzzing environment. Our study, uses a diverse set of 10 DRAM chips from various manufacturers, with different capacities and memory frequencies. We show that the runtime, used seeds, and DRAM coverage of the fuzzer have been underestimated in previous work. Additionally, we study the entire hardware setup's impact on the transferability of Rowhammer by fuzzing the same DRAM on 4 identical machines. The transferability study heavily relates to Rowhammer-based physically unclonable functions (PUFs) which rely on the stability of Rowhammer-induced bit flips. Our results confirm the findings of the Blacksmith fuzzer, showing that even modern DRAM chips are vulnerable to Rowhammer. In addition, we show that PUFs are challenging to achieve on commodity systems due to the high variability of Rowhammer bit flips.","tags":["Rowhammer"],"title":"A Rowhammer Reproduction Study Using the Blacksmith Fuzzer","type":"publication"},{"authors":["Daniel Weber","Fabian Thomas","Lukas Gerlach","Ruiyi Zhang","Michael Schwarz"],"categories":null,"content":"","date":1696550400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1696550400,"objectID":"005eb04c9d9a12326e3bbeefe7b524fd","permalink":"https://lukasgerlach.me/publication/2023-reviving-meltdown-3a/","publishdate":"2023-10-06T00:00:00Z","relpermalink":"/publication/2023-reviving-meltdown-3a/","section":"publication","summary":"The transient-execution attack Meltdown leaks sensitive information by transiently accessing inaccessible data during out-of-order execution. Although Meltdown is fixed in hardware for recent CPU generations, most currently-deployed CPUs have to rely on software mitigations, such as KPTI. Still, Meltdown is considered non-exploitable on current systems. In this paper, we show that adding another layer of indirection to Meltdown transforms a transient-execution attack into a side-channel attack, leaking metadata instead of data. We show that despite software mitigations, attackers can still leak metadata from other security domains by observing the success rate of Meltdown on non-secret data. With LeakIDT, we present the first cache-line granular monitoring of kernel addresses. LeakIDT allows an attacker to obtain cycle-accurate timestamps for attacker-chosen interrupts. We use our attack to get accurate inter-keystroke timings and fingerprint visited websites. While we propose a low-overhead software mitigation to prevent the exploitation of LeakIDT, we emphasize that the side-channel aspect of transient-execution attacks should not be underestimated.","tags":["Meltdown","Transient-Execution"],"title":"Indirect Meltdown: Building Novel Side-Channel Attacks from Transient-Execution Attacks","type":"publication"},{"authors":["Daniel Weber","Fabian Thomas","Lukas Gerlach","Ruiyi Zhang","Michael Schwarz"],"categories":null,"content":"","date":1696550400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1696550400,"objectID":"50ff79f5bbf3b492fcbb7ed4bde0dc6b","permalink":"https://lukasgerlach.me/publication/2023-indirect-meltdown/","publishdate":"2023-10-06T00:00:00Z","relpermalink":"/publication/2023-indirect-meltdown/","section":"publication","summary":"Since the initial discovery of Meltdown and Spectre in 2017, different variants of these attacks have been discovered. One often overlooked variant is Meltdown 3a, also known as Meltdown-CPL-REG. Even though Meltdown-CPL-REG was initially discovered in 2018, the available information regarding the vulnerability is still sparse. In this paper, we analyze Meltdown-CPL-REG on 19 different CPUs from different vendors using an automated tool. We observe that the impact is more diverse than documented and differs from CPU to CPU. Surprisingly, while the newest Intel CPUs do not seem affected by Meltdown-CPL-REG, the newest available AMD CPUs (Zen3+) are still affected by the vulnerability. Furthermore, given our attack primitive CounterLeak, we show that besides up-to-date patches, Meltdown-CPL-REG can still be exploited as we reenable performance-counter-based attacks on cryptographic algorithms, break KASLR, and mount Spectre attacks. Although Meltdown-CPL-REG is not as powerful as other transient-execution attacks, its attack surface should not be underestimated.","tags":["Meltdown","Transient-Execution"],"title":"Reviving Meltdown 3a","type":"publication"},{"authors":["Andreas Kogler","Jonas Juffinger","Lukas Giner","Lukas Gerlach","Martin Schwarzl","Michael Schwarz","Daniel Gruss","Stefan Mangard"],"categories":null,"content":"","date":1691539200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1691539200,"objectID":"570bf82dc55978d2cbda05b54c30439c","permalink":"https://lukasgerlach.me/publication/2023-collide-power/","publishdate":"2023-08-09T00:00:00Z","relpermalink":"/publication/2023-collide-power/","section":"publication","summary":"Differential Power Analysis (DPA) measures single-bit differences between data values used in computer systems by statistical analysis of power traces. In this paper, we show that the mere co-location of data values, e.g., attacker and victim data in the same buffers and caches, leads to power leakage in modern CPUs that depends on a combination of both values, resulting in a novel attack, Collide+Power. We systematically analyze the power leakage of the CPU's memory hierarchy to derive precise leakage models enabling practical end-to-end attacks. These attacks can be conducted in software with any signal related to power consumption, e.g., power consumption interfaces or throttling-induced timing variations. Leakage due to throttling requires 133.3 times more samples than direct power measurements. We develop a novel differential measurement technique amplifying the exploitable leakage by a factor of 8.778 on average, compared to a straightforward DPA approach. We demonstrate that Collide+Power leaks single-bit differences from the CPU's memory hierarchy with fewer than 23000 measurements. Collide+Power varies attacker-controlled data in our end-to-end DPA attacks. We present a Meltdown-style attack, leaking from attacker-chosen memory locations, and a faster MDS-style attack, which leaks 4.82 bit/h. Collide+Power is a generic attack applicable to any modern CPU, arbitrary memory locations, and victim applications and data. However, the Meltdown-style attack is not yet practical, as it is limited by the state of the art of prefetching victim data into the cache, leading to an unrealistic real-world attack runtime with throttling of more than a year for a single bit. Given the different variants and potentially more practical prefetching methods, we consider Collide+Power a relevant threat that is challenging to mitigate.","tags":["Power Analysis","Side Channel"],"title":"Collide+Power: Leaking Inaccessible Data with Software-based Power Side Channels","type":"publication"},{"authors":["Fabian Thomas","Lukas Gerlach","Michael Schwarz"],"categories":null,"content":"","date":1686960000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1686960000,"objectID":"5471dc435fcf824632d7ecd5a4e74219","permalink":"https://lukasgerlach.me/publication/2023-hammulator/","publishdate":"2023-06-17T00:00:00Z","relpermalink":"/publication/2023-hammulator/","section":"publication","summary":"Rowhammer, first considered a reliability issue, turned out to be a significant threat to the security of systems. Hence, several mitigation techniques have been proposed to prevent the exploitation of the Rowhammer effect. Consequently, attackers developed more sophisticated hammering and exploitation techniques to circumvent mitigations. Still, the development and testing of Rowhammer exploits can be a tedious process, taking multiple hours to get the bit flip at the correct location. In this paper, we propose Hammulator, an open-source rapid-prototyping framework for Rowhammer exploits. We simulate the Rowhammer effect using the gem5 simulator and DRAMsim3 model, with a parameterizable implementation that allows researchers to simulate various types of systems. Hammulator enables faster and more deterministic bit flips, facilitating the development of Rowhammer proof-of-concept exploits and defenses. We evaluate our simulator by reproducing 2 open-source Rowhammer exploits. We also evaluate 2 previously proposed mitigations, PARA and TRR, in our simulator. Additionally, our micro- and macrobenchmarks show that our simulator has a small average overhead in the range of 6.96 % to 10.21 %. Our results show that Hammulator can be used to compare Rowhammer exploits objectively by providing a consistent testing environment. Hammulator and all experiments and evaluations are open source, hoping to ease the research on Rowhammer.","tags":["Rowhammer","Simulation"],"title":"Hammulator: Simulate Now-Exploit Later","type":"publication"},{"authors":["Lukas Gerlach","Daniel Weber","Ruiyi Zhang","Michael Schwarz"],"categories":null,"content":"","date":1684713600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1684713600,"objectID":"f58e8827c08da0d494e8b2342f465c94","permalink":"https://lukasgerlach.me/publication/2023-security-risc/","publishdate":"2023-05-22T00:00:00Z","relpermalink":"/publication/2023-security-risc/","section":"publication","summary":"Microarchitectural attacks threaten the security of computer systems even in the absence of software vulnerabilities. Such attacks are well explored on x86 and ARM CPUs, with a wide range of proposed but not-yet deployed hardware countermeasures. With the standardization of the RISC-V instruction set architecture and the announcement of support for the architecture by major processor vendors, RISC-V CPUs are on the verge of becoming ubiquitous. However, the microarchitectural attack surface of the first commercially available RISC-V hardware CPUs is not yet explored. This paper analyzes the two commercially-available off-the-shelf 64-bit RISC-V (hardware) CPUs used in most RISC-V systems running a full-fledged commodity Linux system. We evaluate the microarchitectural attack surface, which leads to the introduction of 3 new microarchitectural attack techniques: Cache+Time, a novel cache-line-granular cache attack without shared memory, Flush+Fault exploiting the Harvard cache architecture for Flush+Reload, and CycleDrift exploiting unprivileged access to instruction-retirement information. Additionally, we show that many known attacks are applicable to these RISC-V CPUs, mainly due to non-existing hardware countermeasures and instruction-set subtleties that do not consider the microarchitectural attack surface. We demonstrate our attacks in 6 case studies, including the first RISC-V-specific microarchitectural KASLR break and a CycleDrift-based method for detecting kernel activity. Based on our analysis, we stress the need to consider the microarchitectural attack surface during every step of a CPU design, including custom instruction-set extensions.","tags":["RISC-V","Side Channel"],"title":"A Security RISC: Microarchitectural Attacks on Hardware RISC-V CPUs","type":"publication"}]